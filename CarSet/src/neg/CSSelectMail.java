/*
 * BuscaClientesPanel.java
 *
 * Created on 06-oct-2009, 11:09:27
 */

package neg;

import data.BeanCorreoCliente;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import utils.TablaModelo;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JTextField;
import javax.swing.table.TableColumn;
import data.Cliente;
import java.sql.ResultSet;

/**
 *
 * @author depr102
 */
public class CSSelectMail extends javax.swing.JPanel
{
    private JTextField jTextMail;
    private int cliID = 0;
    

    
    /** Creates new form BuscaClientesPanel */
    public CSSelectMail(JTextField jTextC)
    {
       
        TablaModelo modelo = new TablaModelo();
        Cliente client = new Cliente();

        //this.jTextMail = jTextC;
        String cliente= new String(jTextC.getText());
        int numcliente=client.getClienteID(cliente);

        String queryContacto="SELECT * FROM CC_CONTACTOS_CLIENTE WHERE CL_ID="+numcliente;
        ResultSet rsContacto = CSDesktop.datos.select(queryContacto);

        modelo.setColumnIdentifiers(new String[] {"NOMBRE", "MAIL",});

       int numeroFila = 0;
        try {
            while (rsContacto.next()) {
                Object[] datosFila = new Object[modelo.getColumnCount()];
                int j = 0;
                for (int k = 0; k < 6; k++) {
                    if (k == 1 || k == 4) {
                        datosFila[j] = rsContacto.getObject(k + 1);
                        System.out.println("Dato" + k + " " + rsContacto.getObject(k + 1));
                        j++;
                    }
                }
                modelo.addRow(datosFila);
                numeroFila++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(CSSelectMail.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        jTable1.setModel(modelo);
        TableColumn columna1 = jTable1.getColumnModel().getColumn(0);
        columna1.setPreferredWidth(300);
        TableColumn columna2 = jTable1.getColumnModel().getColumn(1);
        columna2.setPreferredWidth(100);

        jTable1.addMouseListener(new MouseAdapter()
        {
        public void mouseClicked(MouseEvent e)
        {
            System.out.println("Estamos en el result");
            int fila = jTable1.rowAtPoint(e.getPoint());
            int columna = jTable1.columnAtPoint(e.getPoint());
              if ((fila > -1) && (columna > -1))
            {
               String nombre = ((String)jTable1.getValueAt(fila,0).toString());
               String direccion = ((String)jTable1.getValueAt(fila,1).toString());
               

               //jTextMail.setText(cliente);
               CSDesktop.BuscaMail.dispose();
               
             }                  
         }
        });
        
    }

    public boolean retornarValor()
    {
        return true;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButtonLimpiar = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setEditingRow(0);
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Cerrar");
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButtonLimpiar.setText("Limpiar");
        jButtonLimpiar.setName("jButtonLimpiar"); // NOI18N
        jButtonLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLimpiarActionPerformed(evt);
            }
        });

        jButton2.setText("Mandar");
        jButton2.setName("jButton2"); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(173, 173, 173)
                        .addComponent(jButton1)
                        .addGap(20, 20, 20)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonLimpiar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButtonLimpiar)
                    .addComponent(jButton2))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CSDesktop.BuscaMail.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLimpiarActionPerformed
         jTextMail.setText("");
         CSDesktop.BuscaMail.dispose();
}//GEN-LAST:event_jButtonLimpiarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonLimpiar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables


}