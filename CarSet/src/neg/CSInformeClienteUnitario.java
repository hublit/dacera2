/*
 * CSInformeClienteUnitario.java
 *
 * Created on 10-dic-2009, 8:48:09
 */

package neg;


import com.mysql.jdbc.Connection;
import data.Cliente;
import data.DbConnection;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.net.UnknownHostException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;

/**
 *
 * @author depr102
 */
public class CSInformeClienteUnitario extends javax.swing.JPanel
{
    String query = "";
    /** Creates new form CSInformeDet1 */
    public CSInformeClienteUnitario() throws SQLException
    {
        initComponents();
        CSDesktop.menuInformeClienteUnitario.setEnabled(false);
        KeyListener l = new KeyListener()
        {
            public void keyTyped(KeyEvent e) {}
            public void keyPressed(KeyEvent e)
            {
               if (e.getKeyCode() == KeyEvent.VK_ENTER)
               {
                    jButtonGenerar.doClick();
                }
                if (e.getKeyCode() == KeyEvent.VK_ESCAPE)
                {
                    jButtonCancelar.doClick();
                }
            }
            public void keyReleased(KeyEvent e) {}
        };
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jButtonGenerar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        lFechaFin = new javax.swing.JLabel();
        jComboBoxAnyo = new javax.swing.JComboBox();
        lCliente = new javax.swing.JLabel();
        jTextCliente = new javax.swing.JTextField();
        jToggleButtonCliente = new javax.swing.JToggleButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(170, 16, 4));
        jLabel1.setText("INFORME CLIENTE UNITARIO");
        jLabel1.setName("jLabel1"); // NOI18N

        jSeparator7.setForeground(new java.awt.Color(170, 16, 4));
        jSeparator7.setName("jSeparator7"); // NOI18N

        jSeparator6.setForeground(new java.awt.Color(170, 16, 4));
        jSeparator6.setName("jSeparator6"); // NOI18N

        jButtonGenerar.setText("Generar");
        jButtonGenerar.setName("jButtonGenerar"); // NOI18N
        jButtonGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGenerarActionPerformed(evt);
            }
        });

        jButtonCancelar.setForeground(new java.awt.Color(255, 0, 0));
        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.setName("jButtonCancelar"); // NOI18N
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        lFechaFin.setForeground(new java.awt.Color(0, 0, 100));
        lFechaFin.setText("AÃ±o");
        lFechaFin.setName("lFechaFin"); // NOI18N

        jComboBoxAnyo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010" }));
        jComboBoxAnyo.setSelectedIndex(4);
        jComboBoxAnyo.setName("jComboBoxAnyo"); // NOI18N
        jComboBoxAnyo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAnyoActionPerformed(evt);
            }
        });

        lCliente.setForeground(new java.awt.Color(0, 0, 100));
        lCliente.setText("Cliente");
        lCliente.setName("lCliente"); // NOI18N

        jTextCliente.setEditable(false);
        jTextCliente.setName("jTextCliente"); // NOI18N

        jToggleButtonCliente.setText("Buscar Cliente");
        jToggleButtonCliente.setName("jToggleButtonCliente"); // NOI18N
        jToggleButtonCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButtonClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButtonGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(172, 172, 172)
                        .addComponent(jButtonCancelar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(143, 143, 143))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jToggleButtonCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(259, 259, 259)
                        .addComponent(lFechaFin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBoxAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
                            .addComponent(jSeparator7, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE))))
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator7, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jToggleButtonCliente)
                    .addComponent(jTextCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lCliente))
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lFechaFin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBoxAnyo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(101, 101, 101)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonCancelar)
                    .addComponent(jButtonGenerar))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGenerarActionPerformed

        GenerarInforme();
    }

    public void GenerarInforme()
    {
        int clienteID = 0;
        String cliente=new String(jTextCliente.getText());

        int anyo = Integer.parseInt(jComboBoxAnyo.getSelectedItem().toString());
        int anyo_post = anyo + 1;
        int anyo_ant = anyo - 1;        

        //SE RECOGEN LAS FECHAS DE GENERACION DEL INFORME
        //FECHA INICIO
        String fechaIni=anyo+"-01-01";

        //FECHA FIN
        String fechaFin=anyo+"-12-31";
        
        //FECHA INICIO ANTERIOR
        String fechaIniAnt=anyo_ant+"-01-01";
        
                //Se comprueba que haya seleccionado un cliente
        if (!cliente.equals("")) {
            Cliente cliente2 = new Cliente();
            clienteID = cliente2.getClienteID(cliente);

        }
        // SE EJECUTA LA QUERY NECEARIA PARA RECOGER LOS DATOS NECESARIOS PARA REALIZAR EL INFORME
        // POR LO QUE PARECE, EL CLIENTE SIEMPRE TIENE QUE APARECER PORQUE EN LA QUERY ESTA.
               query =  "SELECT cl.cl_id, cl.cl_nombre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 1, pe.pe_ta_es_cliente, 0) ) AS enero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 2, pe.pe_ta_es_cliente, 0) ) AS febrero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 3, pe.pe_ta_es_cliente, 0) ) AS marzo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 4, pe.pe_ta_es_cliente, 0) ) AS abril, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 5, pe.pe_ta_es_cliente, 0) ) AS mayo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 6, pe.pe_ta_es_cliente, 0) ) AS junio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 7, pe.pe_ta_es_cliente, 0) ) AS julio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 8, pe.pe_ta_es_cliente, 0) ) AS agosto, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 9, pe.pe_ta_es_cliente, 0) ) AS septiembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 10, pe.pe_ta_es_cliente, 0) ) AS octubre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 11, pe.pe_ta_es_cliente, 0) ) AS noviembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 12, pe.pe_ta_es_cliente, 0) ) AS diciembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 1, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_enero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 2, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_febrero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 3, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_marzo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 4, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_abril, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 5, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_mayo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 6, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_junio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 7, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_julio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 8, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_agosto, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 9, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_septiembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 10, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_octubre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 11, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_noviembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 12, pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor, 0) ) AS mg_pe_diciembre, " +
                        "SUM(pe.pe_ta_es_cliente) AS ta_cliente, " +
                        "SUM(pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor) AS mg_total_pedidos, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 1, 1, 0)) AS num_enero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 2, 1, 0)) AS num_febrero, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 3, 1, 0)) AS num_marzo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 4, 1, 0)) AS num_abril, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 5, 1, 0)) AS num_mayo, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 6, 1, 0)) AS num_junio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 7, 1, 0)) AS num_julio, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 8, 1, 0)) AS num_agosto, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 9, 1, 0)) AS num_septiembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 10, 1, 0)) AS num_octubre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 11, 1, 0)) AS num_noviembre, " +
                        "SUM(IF(MONTH(pe.pe_fecha) = 12, 1, 0)) AS num_diciembre, " + 
                        "(SELECT SUM(pe.pe_ta_es_cliente) FROM carset.pe_pedidos pe INNER JOIN carset.pc_pedidos_clientes pc ON pe.pe_num = pc.pe_num " +
                        "RIGHT JOIN carset.cl_clientes cl ON pc.cl_id = cl.cl_id WHERE pe.pe_fecha BETWEEN '"+fechaIniAnt+"' AND '"+fechaIni+"' " +
                        "AND pc.cl_id = "+clienteID+" GROUP BY cl.cl_nombre) AS ta_cliente_anterior, " +
                        "(SELECT SUM(pe.pe_ta_es_cliente - pe.pe_ta_es_proveedor) FROM carset.pe_pedidos pe INNER JOIN carset.pc_pedidos_clientes pc ON pe.pe_num = pc.pe_num " +
                        "RIGHT JOIN carset.cl_clientes cl ON pc.cl_id = cl.cl_id WHERE pe.pe_fecha BETWEEN '"+fechaIniAnt+"' AND '"+fechaIni+"' " +
                        "AND pc.cl_id = "+clienteID+" GROUP BY cl.cl_nombre) AS mg_cliente_anterior, " +
                        "(SELECT SUM(1) FROM carset.pe_pedidos pe INNER JOIN carset.pc_pedidos_clientes pc ON pe.pe_num = pc.pe_num " +
                        "RIGHT JOIN carset.cl_clientes cl ON pc.cl_id = cl.cl_id WHERE pe.pe_fecha BETWEEN '"+fechaIniAnt+"' AND '"+fechaIni+"' " +
                        "AND pc.cl_id = "+clienteID+" GROUP BY cl.cl_nombre) AS num_anterior " +
                        "FROM carset.pe_pedidos pe INNER JOIN carset.pc_pedidos_clientes pc ON pe.pe_num = pc.pe_num " +
                        "RIGHT JOIN carset.cl_clientes cl ON pc.cl_id = cl.cl_id " +
                        "WHERE pe.pe_estado != 'Anulado' AND pe.pe_fecha BETWEEN '"+fechaIni+"' AND '"+fechaFin+"' AND pc.cl_id = " + clienteID +" GROUP BY cl.cl_nombre";


        System.out.println(query);

        ResultSet rs = CSDesktop.datos.select(query);

        Map pars = new HashMap();
        pars.put("Query", query);
        pars.put("FechaInicio", fechaIni);
        pars.put("FechaFin", fechaFin);

        JasperReport jasperReport = null;
        JasperPrint jasperPrint;
        Connection con = null;

        try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(CSInformeDet1.class.getName()).log(Level.SEVERE, null, ex);
            }
             DbConnection conexion = null;
            try {
                conexion = new DbConnection();
            } catch (UnknownHostException ex) {
                Logger.getLogger(CSInformeDet2.class.getName()).log(Level.SEVERE, null, ex);
            }
                con=(Connection) conexion.getConexion();

                CSDesktop.InformeClienteUnitario.dispose();

                //1-Compilamos el archivo XML y lo cargamos en memoria
                jasperReport = JasperCompileManager.compileReport(getClass().getResourceAsStream("/data/reportes/InformeClienteUnitario.jrxml"));

                //2-Llenamos el reporte con la informaciï¿½n y parï¿½metros necesarios
                jasperPrint = JasperFillManager.fillReport(getClass().getResourceAsStream("/data/reportes/InformeClienteUnitario.jasper"), pars, con);

                JRViewerInformeUnitario jrViewer = new JRViewerInformeUnitario(jasperPrint);
                CSDesktop.InformeClienteUnitario = new JInternalFrame("Informe Unitario Cliente", true, false, false, true );
                CSDesktop.InformeClienteUnitario.getContentPane().add( jrViewer, BorderLayout.CENTER );
                CSDesktop.InformeClienteUnitario.pack();

                CSDesktop.elEscritorio.add( CSDesktop.InformeClienteUnitario );
                Dimension pantalla = CSDesktop.elEscritorio.getSize();
                CSDesktop.InformeClienteUnitario.setSize(pantalla);
                CSDesktop.InformeClienteUnitario.setVisible(true);
        } catch (JRException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButtonGenerarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        CSDesktop.InformeClienteUnitario.dispose();
        CSDesktop.InformeClienteUnitario.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jComboBoxAnyoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAnyoActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jComboBoxAnyoActionPerformed

    private void jToggleButtonClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButtonClienteActionPerformed

        System.out.println("\nBotÃ³n Buscar Cliente en AÃ±adir Pedido.");
        CSDesktop.BuscaCliente = new JInternalFrame("Seleccionar Cliente", true, false, false, true );
        // adjuntar panel al panel de contenido del marco interno
        CSSelectCliente panel = new CSSelectCliente(jTextCliente,"",true);
        CSDesktop.BuscaCliente.getContentPane().add(panel,BorderLayout.CENTER);
        // establecer tamaï¿½o de marco interno en el tamaï¿½o de su contenido
        CSDesktop.BuscaCliente.pack();
        // adjuntar marco interno al escritorio y mostrarlo
        CSDesktop.elEscritorio.add( CSDesktop.BuscaCliente );
        CSDesktop.BuscaCliente.setLocation(150, 50);
        CSDesktop.BuscaCliente.setVisible( true );
}//GEN-LAST:event_jToggleButtonClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonGenerar;
    private javax.swing.JComboBox jComboBoxAnyo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    public javax.swing.JTextField jTextCliente;
    private javax.swing.JToggleButton jToggleButtonCliente;
    private javax.swing.JLabel lCliente;
    private javax.swing.JLabel lFechaFin;
    // End of variables declaration//GEN-END:variables

     public void ValidarFormatos(String accion)
    {
         jButtonGenerar.setEnabled(false);
         JLabel errorFields = new JLabel(accion);
         JOptionPane.showMessageDialog(null,errorFields);
         jButtonGenerar.setEnabled(true);
    }

}
